version: "2"

services:
  hub:
    build:
      context: .
      dockerfile: Dockerfile.jupyterhub
    image: vocloud-jupyterhub
    container_name: ${DOCKER_CONTAINER_NAME}
    volumes:
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "data:${DATA_VOLUME_CONTAINER}"
    ports:
      - "${EXPOSED_PORT}:80"
    environment:
      # All containers will join this network
      DOCKER_NETWORK_NAME: ${DOCKER_NETWORK_NAME}
      # JupyterHub will spawn this Notebook image for users
      DOCKER_NOTEBOOK_IMAGE: ${DOCKER_NOTEBOOK_IMAGE}
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: ${DOCKER_NOTEBOOK_DIR}
      # Using this run command (optional)
      DOCKER_SPAWN_CMD: ${DOCKER_SPAWN_CMD}
      # Required to authenticate users using GitHub OAuth
      VOCLOUD_URL: ${VOCLOUD_URL}
      # Required for network hostname binding
      DOCKER_CONTAINER_NAME: ${DOCKER_CONTAINER_NAME}
      # Base url for jupyterhub
      JUPYTERHUB_BASE_URL: ${JUPYTERHUB_BASE_URL}
      # Path to vocloud volumes
      VOCLOUD_FILESYSTEM_PATH: ${VOCLOUD_FILESYSTEM_PATH}
      VOCLOUD_JOBS_PATH: ${VOCLOUD_JOBS_PATH}
    command: >
      jupyterhub -f /srv/jupyterhub/jupyterhub_config.py

volumes:
  data:
    external:
      name: ${DATA_VOLUME_HOST}

networks:
  default:
    external:
      name: ${DOCKER_NETWORK_NAME}
